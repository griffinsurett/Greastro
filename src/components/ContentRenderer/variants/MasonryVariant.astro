---
// src/components/ContentRenderer/variants/MasonryVariant.astro
/**
 * Masonry Variant - Pinterest-Style Layout
 * 
 * CSS columns masonry layout with:
 * - Variable height items that flow naturally
 * - 1-4 responsive columns
 * - Compact, tiled appearance
 * - Context-aware CTA text (testimonials, portfolio, etc.)
 * 
 * Best for testimonials, galleries, mixed-height content.
 */

import type { BaseVariantProps } from "../ContentRenderer.types";
import MasonryCard from '@/components/LoopComponents/MasonryCard.astro';
import { shouldShowCollectionCTA } from "../utils/helpers";

type Props = BaseVariantProps;

const { 
  items = [],
  title,
  description,
  className = '',
  collectionUrl,
  collectionTitle,
} = Astro.props as Props;

// Smart CTA text based on collection type
const viewAllText = collectionTitle?.toLowerCase().includes('testimonial') 
  ? 'Read More Reviews' 
  : collectionTitle?.toLowerCase().includes('portfolio')
  ? 'View Full Gallery'
  : `Browse All ${collectionTitle || ''}`.trim();

// Ensure items is an array
const safeItems = Array.isArray(items) ? items : [];
---

<section class={`py-16 ${className}`}>
  {/* Centered header */}
  {(title || description) && (
    <div class="text-center mb-12">
      {title && <h2 class="text-4xl font-bold mb-4">{title}</h2>}
      {description && <p class="text-lg text-gray-600 max-w-2xl mx-auto">{description}</p>}
    </div>
  )}
  
  {/* CSS columns masonry layout */}
  {safeItems.length > 0 && (
    <ul class="columns-1 md:columns-2 lg:columns-3 xl:columns-4 gap-6 list-none">
      {safeItems.map((item) => item && (
        <li class="inline-block w-full">
          <MasonryCard {...item} />
        </li>
      ))}
    </ul>
  )}
  
  {/* Purple CTA for visual distinction */}
  {shouldShowCollectionCTA(collectionUrl, safeItems.length) && (
    <div class="mt-12 text-center">
      <a 
        href={collectionUrl} 
        class="inline-flex items-center px-6 py-3 bg-purple-600 text-white font-semibold rounded-lg hover:bg-purple-700 transition-colors"
      >
        {viewAllText}
        <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
        </svg>
      </a>
    </div>
  )}
</section>