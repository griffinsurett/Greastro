---
// src/components/ContentRenderer/variants/MenuVariant.astro
/**
 * Menu Variant - Responsive Navigation Menu
 * 
 * Now expects items to be passed with potential parent relationships.
 * Builds tree structure from flat items.
 */

import type { BaseVariantProps } from "../ContentRenderer.types";
import MenuList from '@/components/LoopTemplates/Menu/MenuList.astro';
import MobileMenuDrawer from '@/components/Menu/HamburgerMenuDrawer';
import { buildMenuTree } from '@/utils/menuQueries';

interface Props extends BaseVariantProps {
  maxDepth?: number;
  mode?: 'responsive' | 'desktop-only' | 'mobile-only';
}

const {
  items = [],
  className = "",
  id,
  maxDepth = 3,
  mode = 'responsive',
} = Astro.props as Props;

// Build hierarchical tree from flat items
const menuTree = buildMenuTree(items);

// Determine which versions to show based on mode
const showDesktop = mode === 'responsive' || mode === 'desktop-only';
const showMobile = mode === 'responsive' || mode === 'mobile-only';

// Responsive visibility classes
const desktopClasses = mode === 'responsive' ? 'hidden md:block' : '';
const mobileClasses = mode === 'responsive' ? 'md:hidden' : '';
---
<div id={id} class={`menu-variant ${className}`}>
  {showDesktop && (
    <nav class={`menu-desktop ${desktopClasses}`} aria-label="Main navigation">
      <MenuList items={menuTree} level={0} />
    </nav>
  )}
  
  {showMobile && (
    <div class={`menu-mobile ${mobileClasses}`}>
      <MobileMenuDrawer items={menuTree} client:visible />
    </div>
  )}
</div>