---
// src/components/examples/RelationGraph.astro
/**
 * Visualize tree structure
 */

export interface Props {
  tree: any;
  depth?: number;
}

const { tree, depth = 0 } = Astro.props;
---

<div class={depth > 0 ? 'ml-6 mt-2' : ''}>
  <div class="flex items-center gap-2">
    {depth > 0 && (
      <span class="text-gray-400">└─</span>
    )}
    <div class={`p-2 rounded ${depth === 0 ? 'bg-blue-100 font-bold' : 'bg-gray-100'}`}>
      {tree.entry.data.title}
      <span class="text-xs text-gray-500 ml-2">
        (depth: {tree.depth})
      </span>
    </div>
  </div>
  {tree.children && tree.children.length > 0 && (
    <div class="mt-1 font-mono text-sm">
      {tree.children.map((child: any) => (
        <Astro.self tree={child} depth={depth + 1} />
      ))}
    </div>
  )}
</div>