---
// src/components/preferences/language/GoogleTranslateScript.astro
---

<script is:inline>
  // Check if we have cached translation
  const savedLang = localStorage.getItem('user-language');
  const cacheKey = 'translated_body_' + savedLang + '_' + window.location.pathname;
  const hasCachedTranslation = savedLang && savedLang !== 'en' && localStorage.getItem(cacheKey);
  
  // CRITICAL: Only load Google Translate if we DON'T have cached content
  if (!hasCachedTranslation) {
    // Cookie functions
    function getCookie(name) {
      const value = '; ' + document.cookie;
      const parts = value.split('; ' + name + '=');
      if (parts.length === 2) return parts.pop().split(';').shift();
      return '';
    }

    function setCookie(name, value, days) {
      const expires = new Date();
      expires.setTime(expires.getTime() + days * 24 * 60 * 60 * 1000);
      document.cookie = name + '=' + value + ';expires=' + expires.toUTCString() + ';path=/';
    }

    function clearCookie(name) {
      document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/';
      document.cookie = name + '=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/;domain=' + window.location.hostname;
    }

    // Initialize Google Translate
    window.initializeGoogleTranslate = function() {
      if (typeof google === 'undefined' || !google.translate) return;

      const checkReady = setInterval(function() {
        if (google.translate.TranslateElement) {
          clearInterval(checkReady);
          
          new google.translate.TranslateElement({
            pageLanguage: 'en',
            includedLanguages: '',
            autoDisplay: false,
          }, 'google_translate_element');
        }
      }, 100);
    };

    // Public function for language switcher
    window.changeLanguage = function(languageCode) {
      localStorage.setItem('user-language', languageCode);
      
      // Clear translation cache when language changes
      Object.keys(localStorage)
        .filter(function(k) { return k.startsWith('translated_body_'); })
        .forEach(function(k) { localStorage.removeItem(k); });
      
      if (languageCode === 'en') {
        clearCookie('googtrans');
      } else {
        setCookie('googtrans', '/en/' + languageCode, 365);
      }
      
      // Scroll to top before reload
      window.scrollTo(0, 0);
      
      // Use href assignment instead of reload()
      window.location.href = window.location.href;
    };

    // Load Google Translate script
    (function() {
      const script = document.createElement('script');
      script.src = 'https://translate.google.com/translate_a/element.js?cb=initializeGoogleTranslate';
      script.async = true;
      document.head.appendChild(script);
    })();
  } else {
    console.log('ðŸš€ Using cached translation - skipping Google Translate API load');
    
    // Still provide changeLanguage function
    window.changeLanguage = function(languageCode) {
      localStorage.setItem('user-language', languageCode);
      
      // Clear cache
      Object.keys(localStorage)
        .filter(function(k) { return k.startsWith('translated_body_'); })
        .forEach(function(k) { localStorage.removeItem(k); });
      
      const expires = new Date();
      expires.setTime(expires.getTime() + 365 * 24 * 60 * 60 * 1000);
      
      if (languageCode === 'en') {
        document.cookie = 'googtrans=;expires=Thu, 01 Jan 1970 00:00:00 UTC;path=/';
      } else {
        document.cookie = 'googtrans=/en/' + languageCode + ';expires=' + expires.toUTCString() + ';path=/';
      }
      
      // Scroll to top before reload
      window.scrollTo(0, 0);
      
      // Use href assignment instead of reload()
      window.location.href = window.location.href;
    };
  }
</script>

<div id="google_translate_element" style="display: none;"></div>

<style>
  .goog-te-banner-frame,
  .goog-te-balloon-frame,
  .goog-te-gadget,
  .skiptranslate,
  iframe.goog-te-menu-frame,
  #google_translate_element,
  body > .skiptranslate,
  iframe.skiptranslate {
    display: none !important;
  }

  body {
    top: 0 !important;
  }
</style>