---
// src/components/preferences/language/GoogleTranslateScript.astro
/**
 * Google Translate Script Loader
 * 
 * Loads Google Translate and manages language switching via cookies.
 * Only applies language when explicitly changed by user, not on every page load.
 */
---

<script is:inline>
  // Global flags to prevent race conditions
  window.__googleTranslateReady__ = false;
  window.__googleTranslateApplying__ = false;

  /**
   * Get Google Translate cookie value
   */
  function getCookie(name) {
    const value = '; ' + document.cookie;
    const parts = value.split('; ' + name + '=');
    if (parts.length === 2) return parts.pop().split(';').shift();
    return '';
  }

  /**
   * Initialize Google Translate widget
   * Called by Google Translate script via callback
   */
  window.initializeGoogleTranslate = function() {
    if (typeof google === 'undefined' || !google.translate) {
      console.error('‚ùå Google Translate API not available');
      return;
    }

    // Wait for TranslateElement to be available
    const checkReady = setInterval(function() {
      if (google.translate.TranslateElement) {
        clearInterval(checkReady);
        
        // Initialize the widget (hidden)
        new google.translate.TranslateElement(
          {
            pageLanguage: 'en',
            includedLanguages: '', // Empty = all languages
            autoDisplay: false,
          },
          'google_translate_element'
        );

        // Mark as ready after initialization
        setTimeout(function() {
          window.__googleTranslateReady__ = true;
          
          // Sync localStorage with actual cookie state on load
          const currentCookie = getCookie('googtrans');
          const savedLanguage = localStorage.getItem('user-language');
          
          // Only auto-apply if there's a mismatch AND we're not already applying
          if (savedLanguage && !window.__googleTranslateApplying__) {
            const expectedCookie = savedLanguage === 'en' ? '' : '/en/' + savedLanguage;
            
            if (currentCookie !== expectedCookie) {
              console.log('üîÑ Syncing language: localStorage=' + savedLanguage + ', cookie=' + currentCookie);
              window.applyGoogleTranslateLanguage(savedLanguage);
            }
          }
        }, 1000);
      }
    }, 100);
  };

  /**
   * Apply a language by setting Google Translate cookie
   * This will trigger a page reload
   */
  window.applyGoogleTranslateLanguage = function(languageCode) {
    // Wait for Google Translate to be ready
    if (!window.__googleTranslateReady__) {
      setTimeout(function() {
        window.applyGoogleTranslateLanguage(languageCode);
      }, 500);
      return;
    }

    // Prevent multiple simultaneous applications
    if (window.__googleTranslateApplying__) {
      console.log('‚è≥ Already applying language, skipping');
      return;
    }

    const currentCookie = getCookie('googtrans');
    const expectedCookie = languageCode && languageCode !== 'en' 
      ? '/en/' + languageCode 
      : '';
    
    // ‚úÖ CRITICAL: Only reload if language is actually changing
    if (currentCookie === expectedCookie) {
      console.log('‚úÖ Already in target language: ' + languageCode);
      return;
    }

    console.log('üåê Applying language: ' + languageCode);
    window.__googleTranslateApplying__ = true;

    // Reset to English
    if (!languageCode || languageCode === 'en') {
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=' + window.location.hostname;
      window.location.reload();
      return;
    }

    // Apply translation
    const cookieValue = '/en/' + languageCode;
    document.cookie = 'googtrans=' + cookieValue + '; path=/';
    document.cookie = 'googtrans=' + cookieValue + '; path=/; domain=' + window.location.hostname;
    window.location.reload();
  };

  // Load Google Translate script
  (function() {
    const script = document.createElement('script');
    script.src = 'https://translate.google.com/translate_a/element.js?cb=initializeGoogleTranslate';
    script.async = true;
    document.head.appendChild(script);
  })();
</script>

<!-- Hidden container for Google Translate widget -->
<div id="google_translate_element" style="display: none;"></div>

<style>
  /* Hide all Google Translate UI elements */
  .goog-te-banner-frame,
  .goog-te-balloon-frame,
  .goog-te-gadget,
  .skiptranslate,
  iframe.goog-te-menu-frame,
  #google_translate_element,
  body > .skiptranslate,
  iframe.skiptranslate {
    display: none !important;
  }

  /* Prevent Google Translate from adding top margin */
  body {
    top: 0 !important;
  }
</style>