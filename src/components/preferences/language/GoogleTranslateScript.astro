---
// src/components/preferences/language/GoogleTranslateScript.astro
/**
 * Google Translate Script Loader
 * 
 * Loads Google Translate API only. Language application is handled by useLanguage hook.
 * This prevents duplicate application logic and infinite reload loops.
 */
---

<script is:inline>
  window.__googleTranslateReady__ = false;
  window.__googleTranslateApplying__ = false;

  // Prevent scroll restoration on reload
  if ('scrollRestoration' in history) {
    history.scrollRestoration = 'manual';
  }

  window.initializeGoogleTranslate = function() {
    if (typeof google === 'undefined' || !google.translate) {
      console.error('‚ùå Google Translate API not available');
      return;
    }

    const checkReady = setInterval(function() {
      if (google.translate.TranslateElement) {
        clearInterval(checkReady);
        
        new google.translate.TranslateElement(
          {
            pageLanguage: 'en',
            includedLanguages: '',
            autoDisplay: false,
          },
          'google_translate_element'
        );

        setTimeout(function() {
          window.__googleTranslateReady__ = true;
          console.log('‚úÖ Google Translate ready');
        }, 1000);
      }
    }, 100);
  };

  function getCookie(name) {
    const value = '; ' + document.cookie;
    const parts = value.split('; ' + name + '=');
    if (parts.length === 2) return parts.pop().split(';').shift();
    return '';
  }

  window.applyGoogleTranslateLanguage = function(languageCode) {
    if (!window.__googleTranslateReady__) {
      console.log('‚è≥ Waiting for Google Translate...');
      setTimeout(function() {
        window.applyGoogleTranslateLanguage(languageCode);
      }, 500);
      return;
    }

    if (window.__googleTranslateApplying__) {
      console.log('üîí Already applying language, skipping');
      return;
    }

    // Check if we just reloaded for this language
    const justApplied = sessionStorage.getItem('language-just-applied');
    if (justApplied === languageCode) {
      console.log('üîí Language "' + languageCode + '" was just applied, skipping');
      sessionStorage.removeItem('language-just-applied');
      return;
    }

    const currentCookie = getCookie('googtrans');
    
    // ‚úÖ FIX: Complete ternary operator for English detection
    const expectedCookie = languageCode === 'en' ? '' : '/en/' + languageCode;
    
    if (currentCookie === expectedCookie) {
      console.log('‚úÖ Language already applied');
      return;
    }

    console.log('üåç Applying language: ' + languageCode);
    window.__googleTranslateApplying__ = true;
    
    // Safety timeout in case reload fails
    setTimeout(function() {
      window.__googleTranslateApplying__ = false;
      console.warn('‚ö†Ô∏è Language apply timeout - resetting flag');
    }, 5000);

    // ‚úÖ CRITICAL: English must clear ALL cookies and reload
    if (languageCode === 'en') {
      // Clear both path and domain cookies
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=' + window.location.hostname;
      
      // Also clear the /auto/ variants that Google sometimes creates
      document.cookie = 'googtrans=/auto/en; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
      document.cookie = 'googtrans=/auto/en; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=' + window.location.hostname;
      
      sessionStorage.setItem('scrollToTop', 'true');
      sessionStorage.setItem('language-just-applied', 'en');
      
      console.log('üîÑ Clearing cookies and reloading for English');
      window.location.reload();
      return;
    }

    // All other languages
    const cookieValue = '/en/' + languageCode;
    document.cookie = 'googtrans=' + cookieValue + '; path=/;';
    document.cookie = 'googtrans=' + cookieValue + '; path=/; domain=' + window.location.hostname;
    
    sessionStorage.setItem('scrollToTop', 'true');
    sessionStorage.setItem('language-just-applied', languageCode);
    
    window.location.reload();
  };

  // Check on page load if we should scroll to top
  (function() {
    if (sessionStorage.getItem('scrollToTop') === 'true') {
      sessionStorage.removeItem('scrollToTop');
      window.scrollTo(0, 0);
      
      // Also prevent any scroll restoration
      setTimeout(function() {
        window.scrollTo(0, 0);
      }, 0);
      
      // Extra insurance
      document.addEventListener('DOMContentLoaded', function() {
        window.scrollTo(0, 0);
      });
    }
  })();

  // Load Google Translate script
  (function() {
    const script = document.createElement('script');
    script.src = 'https://translate.google.com/translate_a/element.js?cb=initializeGoogleTranslate';
    script.async = true;
    script.onerror = function() {
      console.error('‚ùå Failed to load Google Translate script');
    };
    document.head.appendChild(script);
  })();
</script>

<div id="google_translate_element" style="display: none;"></div>

<style>
  .goog-te-banner-frame,
  .goog-te-balloon-frame,
  .goog-te-gadget,
  .skiptranslate,
  iframe.goog-te-menu-frame,
  #google_translate_element,
  body > .skiptranslate,
  iframe.skiptranslate {
    display: none !important;
  }

  body {
    top: 0 !important;
  }
</style>