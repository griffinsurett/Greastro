---
// src/components/preferences/language/GoogleTranslateScript.astro
/**
 * Google Translate Script Loader
 * 
 * CRITICAL: This script must handle:
 * 1. Prevent infinite reload loops
 * 2. Actually clear cookies for English
 * 3. Handle race conditions between localStorage and cookies
 */
---

<script is:inline>
  window.__googleTranslateReady__ = false;
  window.__googleTranslateApplying__ = false;

  // Prevent scroll restoration on reload
  if ('scrollRestoration' in history) {
    history.scrollRestoration = 'manual';
  }

  function getCookie(name) {
    const value = '; ' + document.cookie;
    const parts = value.split('; ' + name + '=');
    if (parts.length === 2) return parts.pop().split(';').shift();
    return '';
  }

  window.initializeGoogleTranslate = function() {
    if (typeof google === 'undefined' || !google.translate) {
      console.error('‚ùå Google Translate API not available');
      return;
    }

    const checkReady = setInterval(function() {
      if (google.translate.TranslateElement) {
        clearInterval(checkReady);
        
        new google.translate.TranslateElement(
          {
            pageLanguage: 'en',
            includedLanguages: '',
            autoDisplay: false,
          },
          'google_translate_element'
        );

        setTimeout(function() {
          window.__googleTranslateReady__ = true;
          console.log('‚úÖ Google Translate ready');
          
          // CRITICAL: Do NOT auto-apply on page load
          // Let the React hook handle all application logic
          // This prevents infinite loops from auto-applying
        }, 1000);
      }
    }, 100);
  };

  window.applyGoogleTranslateLanguage = function(languageCode) {
    if (!window.__googleTranslateReady__) {
      console.log('‚è≥ Waiting for Google Translate...');
      setTimeout(function() {
        window.applyGoogleTranslateLanguage(languageCode);
      }, 500);
      return;
    }

    if (window.__googleTranslateApplying__) {
      console.log('üîí Already applying language, skipping');
      return;
    }

    // CRITICAL FIX #1: Check sessionStorage FIRST before doing anything
    const justApplied = sessionStorage.getItem('language-just-applied');
    const reloadAttempt = parseInt(sessionStorage.getItem('language-reload-attempt') || '0');
    
    // If we just reloaded for this language, check if we need another attempt
    if (justApplied === languageCode) {
      const currentCookie = getCookie('googtrans');
      const expectedCookie = languageCode === 'en' ? '' : '/en/' + languageCode;
      
      // Cookies match - we're done!
      if (currentCookie === expectedCookie) {
        console.log('‚úÖ Language successfully applied: ' + languageCode);
        sessionStorage.removeItem('language-just-applied');
        sessionStorage.removeItem('language-reload-attempt');
        return;
      }
      
      // Cookies don't match but we've tried 3 times - give up to prevent infinite loop
      if (reloadAttempt >= 3) {
        console.error('‚ùå Failed to apply language after 3 attempts, giving up to prevent infinite loop');
        sessionStorage.removeItem('language-just-applied');
        sessionStorage.removeItem('language-reload-attempt');
        return;
      }
      
      // Cookies don't match and we haven't tried too many times - try again
      console.warn('‚ö†Ô∏è Language not applied correctly, attempting again (attempt ' + (reloadAttempt + 1) + '/3)');
    }

    const currentCookie = getCookie('googtrans');
    const expectedCookie = languageCode === 'en' ? '' : '/en/' + languageCode;
    
    // Language already correctly applied
    if (currentCookie === expectedCookie && !justApplied) {
      console.log('‚úÖ Language already applied: ' + languageCode);
      return;
    }

    console.log('üåç Applying language: ' + languageCode);
    console.log('   Current cookie: "' + currentCookie + '"');
    console.log('   Expected cookie: "' + expectedCookie + '"');
    
    window.__googleTranslateApplying__ = true;
    
    // Safety timeout
    setTimeout(function() {
      window.__googleTranslateApplying__ = false;
      console.warn('‚ö†Ô∏è Language apply timeout - resetting flag');
    }, 5000);

    // Set flags before reload
    sessionStorage.setItem('language-just-applied', languageCode);
    sessionStorage.setItem('language-reload-attempt', String(reloadAttempt + 1));
    sessionStorage.setItem('scrollToTop', 'true');

    // CRITICAL FIX #2: For English, clear ALL possible cookie variations
    if (languageCode === 'en') {
      console.log('üßπ Clearing ALL cookies for English (attempt ' + (reloadAttempt + 1) + ')');
      
      // Clear with path=/
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;';
      
      // Clear with domain
      const domain = window.location.hostname;
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=' + domain;
      
      // Clear with dot-prefixed domain
      if (domain.indexOf('.') > -1) {
        const dotDomain = '.' + domain.split('.').slice(-2).join('.');
        document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=' + dotDomain;
      }
      
      // Clear /googtrans/ cookie too (Google sometimes uses this)
      document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/googtrans/;';
      
      // Extra: clear any localhost variations
      if (domain === 'localhost' || domain.startsWith('localhost:')) {
        document.cookie = 'googtrans=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; domain=localhost';
      }
      
      // Verify cookies are cleared before reload
      setTimeout(function() {
        const stillThere = getCookie('googtrans');
        if (stillThere) {
          console.error('‚ö†Ô∏è Warning: googtrans cookie still present: "' + stillThere + '"');
        } else {
          console.log('‚úÖ Cookies cleared successfully');
        }
        window.location.reload();
      }, 100);
      return;
    }

    // All other languages - set cookie and reload
    const cookieValue = '/en/' + languageCode;
    console.log('üç™ Setting cookie: googtrans=' + cookieValue);
    
    document.cookie = 'googtrans=' + cookieValue + '; path=/;';
    document.cookie = 'googtrans=' + cookieValue + '; path=/; domain=' + window.location.hostname;
    
    window.location.reload();
  };

  // Check on page load if we should scroll to top
  (function() {
    if (sessionStorage.getItem('scrollToTop') === 'true') {
      sessionStorage.removeItem('scrollToTop');
      window.scrollTo(0, 0);
      
      setTimeout(function() {
        window.scrollTo(0, 0);
      }, 0);
      
      document.addEventListener('DOMContentLoaded', function() {
        window.scrollTo(0, 0);
      });
    }
  })();

  // Load Google Translate script
  (function() {
    const script = document.createElement('script');
    script.src = 'https://translate.google.com/translate_a/element.js?cb=initializeGoogleTranslate';
    script.async = true;
    script.onerror = function() {
      console.error('‚ùå Failed to load Google Translate script');
    };
    document.head.appendChild(script);
  })();
</script>

<div id="google_translate_element" style="display: none;"></div>

<style>
  .goog-te-banner-frame,
  .goog-te-balloon-frame,
  .goog-te-gadget,
  .skiptranslate,
  iframe.goog-te-menu-frame,
  #google_translate_element,
  body > .skiptranslate,
  iframe.skiptranslate {
    display: none !important;
  }

  body {
    top: 0 !important;
  }
</style>