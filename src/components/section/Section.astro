---
// src/components/section/Section.astro
import { getCollection } from 'astro:content';
import type { CollectionKey } from 'astro:content';
import { getVariantComponents } from '@/components/section/variants/utils/VariantUtils';

// Get all variant components dynamically
const variantComponents = await getVariantComponents();
const availableVariants = Object.keys(variantComponents);

export interface Props {
  collection?: CollectionKey;  // Now optional
  variant?: string;
  title?: string;
  description?: string;
  className?: string;
  columns?: 1 | 2 | 3 | 4 | 5 | 6;
  gap?: 'sm' | 'md' | 'lg' | 'xl';
  // Allow any additional props for custom static content
  [key: string]: any;
}

const {
  collection,
  variant = 'GridVariant',
} = Astro.props;

// Only fetch entries if collection is provided
const entries = collection ? await getCollection(collection) : [];

// Get variant component
const VariantComponent = variantComponents[variant];
if (!VariantComponent) {
  throw new Error(
    `Variant "${variant}" not found. Available variants: ${availableVariants.join(', ')}. 
    Make sure you have a file named "${variant}.astro" in the variants folder.`
  );
}

// Pass ALL props to variant (including entries, which might be empty)
const variantProps = {
  entries,
  ...Astro.props,
};
---
<VariantComponent {...variantProps} />