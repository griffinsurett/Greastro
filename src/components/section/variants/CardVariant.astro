---
// src/components/section/variants/CardVariant.astro
/**
 * Card Variant - Feature Showcase Layout
 * 
 * Similar to GridVariant but uses FeatureCard with:
 * - Larger, more prominent cards
 * - Image support
 * - Hover lift animations
 * - Secondary button style
 * 
 * Best for features, services, products that need emphasis.
 */

import type { BaseVariantProps } from "../Section.types";
import FeatureCard from "@/components/LoopComponents/FeatureCard.astro";
import Button from "@/components/Button/Button";

interface Props extends BaseVariantProps {
  columns?: 1 | 2 | 3 | 4;
}

const {
  items = [],
  title,
  description,
  className = "",
  columns = 3,
  collectionUrl,
  collectionTitle,
} = Astro.props as Props;

const viewAllText = `Explore All ${collectionTitle || ""}`.trim();

const columnClasses = {
  1: "grid-cols-1",
  2: "grid-cols-1 md:grid-cols-2",
  3: "grid-cols-1 md:grid-cols-2 lg:grid-cols-3",
  4: "grid-cols-1 md:grid-cols-2 lg:grid-cols-4",
};
---

<section class={`py-16 ${className}`}>
  {
    (title || description) && (
      <div class="text-center mb-12">
        {title && <h2 class="text-4xl font-bold mb-4">{title}</h2>}
        {description && (
          <p class="text-lg text-gray-600 max-w-2xl mx-auto">{description}</p>
        )}
      </div>
    )
  }

  {
    items.length > 0 && (
      <ul class={`grid ${columnClasses[columns]} gap-8 list-none`}>
        {items.map((item) => (
          <li>
            <FeatureCard {...item} />
          </li>
        ))}
      </ul>
    )
  }

  {
    collectionUrl && items.length > 0 && (
      <div class="mt-12 text-center">
        <Button
          href={collectionUrl}
          rightIcon="lu:chevron-right"
          variant="secondary"
          size="lg"
        >
          {viewAllText}
        </Button>
      </div>
    )
  }
</section>