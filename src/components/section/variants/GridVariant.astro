---
// src/components/section/variants/GridVariant.astro  
import type { BaseVariantProps } from './utils/VariantTypes';
import GridCard from '@/components/LoopComponents/GridCard.astro';

interface Props extends BaseVariantProps {
  columns?: 1 | 2 | 3 | 4 | 5 | 6;
  gap?: 'sm' | 'md' | 'lg' | 'xl';
}

const { 
  items = [],
  title,
  description,
  className = '',
  columns = 3, 
  gap = 'md',
  collectionUrl,
  collectionTitle,
} = Astro.props as Props;

const viewAllText = `View All`;

const gapClasses = {
  sm: 'gap-2',
  md: 'gap-4',
  lg: 'gap-6',
  xl: 'gap-8',
};

const columnClasses = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',
  5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-5',
  6: 'grid-cols-1 md:grid-cols-3 lg:grid-cols-6',
};
---

<section class={`py-16 ${className}`}>
  {(title || description) && (
    <div class="text-center mb-12">
      {title && <h2 class="text-4xl font-bold mb-4">{title}</h2>}
      {description && <p class="text-lg text-gray-600 max-w-2xl mx-auto">{description}</p>}
    </div>
  )}
  
  {items.length > 0 && (
    <ul class={`grid ${columnClasses[columns]} ${gapClasses[gap]} list-none`}>
      {items.map((item) => (
        <li>
          <GridCard {...item} />
        </li>
      ))}
    </ul>
  )}
  
  {/* View All button - only shows if collectionUrl exists */}
  {collectionUrl && items.length > 0 && (
    <div class="mt-12 text-center">
      <a 
        href={collectionUrl} 
        class="inline-flex items-center px-8 py-4 bg-blue-600 text-white font-semibold rounded-lg hover:bg-blue-700 hover:shadow-lg transition-all duration-200"
      >
        {viewAllText}
        <svg class="ml-2 w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"></path>
        </svg>
      </a>
    </div>
  )}
</section>