---
// src/components/variants/GridVariant.astro
export interface Props {
  entries: any[];
  collection: string;
  title?: string;
  description?: string;
  className?: string;
  columns?: 1 | 2 | 3 | 4 | 5 | 6;
  gap?: 'sm' | 'md' | 'lg' | 'xl';
}

const { 
  entries, 
  collection, 
  title,
  description,
  className = '',
  columns = 3, 
  gap = 'md' 
} = Astro.props;

const gapClasses = {
  sm: 'gap-2',
  md: 'gap-4',
  lg: 'gap-6',
  xl: 'gap-8',
};

const columnClasses = {
  1: 'grid-cols-1',
  2: 'grid-cols-1 md:grid-cols-2',
  3: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-3',
  4: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-4',
  5: 'grid-cols-1 md:grid-cols-2 lg:grid-cols-5',
  6: 'grid-cols-1 md:grid-cols-3 lg:grid-cols-6',
};
---
<section class={`py-16 ${className}`}>
  {(title || description) && (
    <div class="text-center mb-12">
      {title && <h2 class="text-4xl font-bold mb-4">{title}</h2>}
      {description && <p class="text-lg text-gray-600 max-w-2xl mx-auto">{description}</p>}
    </div>
  )}
  
  <div class={`grid ${columnClasses[columns]} ${gapClasses[gap]}`}>
    {entries.map((entry) => (
      <article class="bg-white rounded-lg overflow-hidden shadow-md hover:shadow-lg hover:-translate-y-1 transition-all duration-200">
        {entry.data.image && (
          <img 
            src={entry.data.image.src} 
            alt={entry.data.image.alt}
            class="w-full h-48 object-cover"
          />
        )}
        <div class="p-6">
          <h3 class="text-xl font-semibold mb-2">
            <a href={`/${collection}/${entry.slug}`} class="text-gray-900 hover:text-blue-600 transition-colors">
              {entry.data.title}
            </a>
          </h3>
          {entry.data.description && (
            <p class="text-gray-600 leading-relaxed">{entry.data.description}</p>
          )}
        </div>
      </article>
    ))}
  </div>
</section>