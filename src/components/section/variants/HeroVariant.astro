---
// src/components/section/variants/HeroVariant.astro
import type { BaseVariantProps } from './utils/VariantTypes';

interface Props extends BaseVariantProps {
  image?: {
    src: string;
    alt: string;
  };
  ctaText?: string;
  ctaLink?: string;
}

const { 
  items = [],
  title,
  description,
  className = '',
  // Hero-specific static props
  image,
  ctaText = 'Learn More',
  ctaLink
} = Astro.props as Props;

// Use first item from collection OR static content
const hero = items[0];
const hasHeroContent = hero || (title || description || image);

// Safely extract image data
const heroImage = image || hero?.image;
const imageSrc = heroImage?.src;
const imageAlt = heroImage?.alt || '';

// Safely extract link
const heroLink = ctaLink || hero?.url;
---

<section class={`relative ${className}`}>
  {hasHeroContent && (
    <div class="relative min-h-[60vh] flex items-center justify-center overflow-hidden">
      {/* Use provided image or hero item image */}
      {imageSrc && (
        <div class="absolute inset-0 -z-10">
          <img 
            src={imageSrc} 
            alt={imageAlt}
            class="w-full h-full object-cover"
          />
          <div class="absolute inset-0 bg-gradient-to-b from-black/30 to-black/60"></div>
        </div>
      )}
      
      <div class="relative text-center text-black px-8 max-w-3xl">
        <h1 class="text-5xl md:text-6xl font-bold mb-4">
          {title || hero?.title || 'Welcome'}
        </h1>
        <p class="text-xl mb-8 opacity-95">
          {description || hero?.description || ''}
        </p>
        
        {/* Show CTA if we have a link */}
        {heroLink && (
          <a 
            href={heroLink} 
            class="inline-block px-8 py-4 bg-blue-600 text-white font-semibold rounded-lg hover:-translate-y-1 hover:shadow-lg transition-all duration-200"
          >
            {ctaText}
          </a>
        )}
      </div>
    </div>
  )}
  
  {/* Allow custom content via slot */}
  <slot />
</section>