---
// src/layouts/collections/CollectionLayout.astro
/**
 * Collection Layout - Default Item Page Layout
 * 
 * The standard layout for individual collection items.
 * Features:
 * - Optional hero image with gradient overlay
 * - Large hero section for items with bannerImage
 * - Simple header for items without images
 * - Metadata display (date, author, reading time)
 * - MDX content rendering
 * 
 * This is the default layout used when no custom layout is specified.
 * Falls back gracefully when images or metadata are missing.
 */

import BaseLayout from '@/layouts/BaseLayout.astro';
import { getAuthorName, getImageSrc } from './helpers/layoutHelpers';
import type { CollectionLayoutProps } from './types';

const { 
  entry,
  collection,
  collectionMeta,
  Content,
  isIndexPage,
  seoProps = {},
  ...extraProps
} = Astro.props as CollectionLayoutProps;

const data = entry?.data || {};

// Use bannerImage for hero, fallback to featuredImage
const bannerImageSrc = getImageSrc(data.bannerImage || data.featuredImage);
const hasHeroImage = !!bannerImageSrc;
---
<BaseLayout {...seoProps}>
  <main class="flex-1">
    {/* Hero section with background image */}
    {hasHeroImage && (
      <section class="relative">
        <div class="relative min-h-[50vh] md:min-h-[60vh] flex items-center justify-center overflow-hidden">
          {/* Background image with gradient overlay */}
          <div class="absolute inset-0 -z-10">
            <img 
              src={bannerImageSrc} 
              alt={data.bannerImage?.alt || data.featuredImage?.alt || data.title}
              class="w-full h-full object-cover"
            />
            {/* Dark gradient for text readability */}
            <div class="absolute inset-0 bg-gradient-to-b from-black/40 via-black/50 to-black/70"></div>
          </div>

          {/* Hero content */}
          <div class="relative container mx-auto px-4 py-16 md:py-24">
            <div class="max-w-4xl mx-auto text-center text-white">
              <h1 class="text-4xl md:text-5xl lg:text-6xl font-bold mb-6 drop-shadow-lg">
                {data.title}
              </h1>
              
              {data.description && (
                <p class="text-xl md:text-2xl mb-8 opacity-95 drop-shadow-md">
                  {data.description}
                </p>
              )}
              
              {/* Metadata row with icons */}
              <div class="flex flex-wrap justify-center gap-4 md:gap-6 text-sm md:text-base text-white/90">
                {data.publishDate && (
                  <time 
                    datetime={new Date(data.publishDate).toISOString()}
                    class="flex items-center gap-2"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
                    </svg>
                    {new Date(data.publishDate).toLocaleDateString()}
                  </time>
                )}
                {data.author && (
                  <span class="flex items-center gap-2">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
                    </svg>
                    By {getAuthorName(data.author)}
                  </span>
                )}
                {data.readingTime && (
                  <span class="flex items-center gap-2">
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
                    </svg>
                    {data.readingTime} min read
                  </span>
                )}
              </div>
            </div>
          </div>
        </div>
      </section>
    )}

    {/* Simple header (no hero image) */}
    {!hasHeroImage && (
      <header class="container mx-auto px-4 py-12 md:py-16">
        <div class="max-w-4xl mx-auto">
          <h1 class="text-4xl md:text-5xl font-bold mb-4">{data.title}</h1>
          
          {data.description && (
            <p class="text-xl text-gray-600 mb-6">{data.description}</p>
          )}
          
          {/* Metadata without icons */}
          <div class="flex flex-wrap gap-4 text-sm text-gray-500">
            {data.publishDate && (
              <time datetime={new Date(data.publishDate).toISOString()}>
                {new Date(data.publishDate).toLocaleDateString()}
              </time>
            )}
            {data.author && (
              <span>By {getAuthorName(data.author)}</span>
            )}
            {data.readingTime && (
              <span>{data.readingTime} min read</span>
            )}
          </div>
        </div>
      </header>
    )}

    {/* MDX content */}
    {Content && (
      <article class="container mx-auto px-4 py-8 md:py-12">
        <div class="prose prose-lg max-w-4xl mx-auto">
          <Content />
        </div>
      </article>
    )}
  </main>
</BaseLayout>