---
// src/pages/[collection]/index.astro
import type { CollectionKey } from "astro:content";
import BaseLayout from "@/layouts/BaseLayout.astro";
import Section from "@/components/section/Section.astro";
import { collections } from "@/content/config";
import { getCollectionMeta } from "@/utils/fetchMeta";
import { shouldCollectionHavePage } from "@/utils/hasPageUtils";
import { getCollectionMetaMDX } from "@/utils/indexMdxUtils";

export async function getStaticPaths() {
  const names = Object.keys(collections) as CollectionKey[];
  const paths = [];

  for (const coll of names) {
    const meta = getCollectionMeta(coll);
    
    if (shouldCollectionHavePage(meta)) {
      paths.push({ params: { collection: coll } });
    }
  }

  return paths;
}

const { collection } = Astro.params;
const meta = getCollectionMeta(collection);

// Check for MDX content using our utility
const mdxResult = await getCollectionMetaMDX(collection);
const MDXContent = mdxResult?.hasContent ? mdxResult.Component : null;

// Simple capitalization inline
const pageTitle = meta.title || collection.charAt(0).toUpperCase() + collection.slice(1);
const pageDescription = meta.description || `Browse our ${collection} collection`;
---

<BaseLayout 
  title={pageTitle}
  description={pageDescription}
>
  <main class="flex-1">
    <div class="container mx-auto px-4">
      {MDXContent ? (
        <MDXContent />
      ) : (
        <Section 
          collection={collection} 
          variant="GridVariant"
          title={pageTitle}
          description={meta.description}
        />
      )}
    </div>
  </main>
</BaseLayout>