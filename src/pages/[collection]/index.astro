---
// src/pages/[collection]/index.astro
import BaseLayout from "@/layouts/BaseLayout.astro";
import Section from "@/components/section/Section.astro";
import { getCollectionMeta } from "@/utils/collections";
import { buildCollectionSEOProps } from "@/utils/seo";
import { shouldCollectionHavePage } from "@/utils/pages";
import { getCollectionMetaMDX } from "@/utils/content";
import { getPageCollections } from "@/utils/pageGeneration";

export async function getStaticPaths() {
  const names = getPageCollections();
  const paths = [];

  for (const coll of names) {
    const meta = getCollectionMeta(coll);
    
    if (shouldCollectionHavePage(meta)) {
      paths.push({ 
        params: { collection: coll },
        props: { meta }
      });
    }
  }

  return paths;
}

const { collection } = Astro.params;
const { meta } = Astro.props;

const mdxResult = await getCollectionMetaMDX(collection);
const MDXContent = mdxResult?.hasContent ? mdxResult.Component : null;

const seoProps = buildCollectionSEOProps(meta, collection);
const { title: pageTitle, description: pageDescription } = seoProps;
---
<BaseLayout {...seoProps}>
  <main class="flex-1">
    <div class="container mx-auto px-4">
      {MDXContent ? (
        <MDXContent />
      ) : (
        <>
          <header class="text-center py-12">
            <h1 class="text-4xl font-bold mb-4">{pageTitle}</h1>
            {pageDescription && (
              <p class="text-xl text-gray-600 max-w-2xl mx-auto">
                {pageDescription}
              </p>
            )}
          </header>
          
          <Section 
            collection={collection} 
            variant="GridVariant"
          />
        </>
      )}
    </div>
  </main>
</BaseLayout>